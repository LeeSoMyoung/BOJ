
// BOJ 2150 Strongly Connected Component C++

#define _CRT_SECURE_NO_WARNINGS

#include <bits/stdc++.h>
#define rep(i,a,b) for(int i=a;i<b;++i)
#define forn(i,N) rep(i,0,N)
#define MAX 100100
#define all(x) x.begin(),x.end()
#define eb emplace_back
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;

bool visited[MAX];
int dfsn[MAX], sn[MAX], SN = 0, cnt = 0;
stack<int> st;
vvi scc,g;
int dfs(int now) {
	int result, top;
	st.push(now);
	dfsn[now] = ++cnt;
	result = dfsn[now];
	for (int next : g[now]) {
		if (!dfsn[next]) result = min(dfs(next), result);
		else if (!visited[next]) result = min(result, dfsn[next]);
	}
	if (result == dfsn[now]) {
		vi SCC;
		while (1) {
			top=st.top(); st.pop();
			visited[top] = true;
			sn[top] = SN;
			SCC.eb(top);
			if (top == now) break;
		}
		++SN;
		scc.eb(SCC);
	}
	return result;
}
int main(void) {
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	int v, e, a, b;
	cin >> v >> e;
	g.resize(v + 1);
	while (e--) {
		cin >> a >> b;
		g[a].eb(b);
	}
	rep(i, 1, v + 1) if (!dfsn[i]) dfs(i);
	cout << SN << '\n';
	forn(i, SN) sort(all(scc[i]));
	sort(all(scc));
	for (vi out : scc) {
		for (int print : out)
			cout << print << ' ';
		cout << -1 << '\n';
	}
	return 0;
}
