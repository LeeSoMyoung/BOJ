
// BOJ 12865 평범한 배낭 Java

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;
import java.util.StringTokenizer;

class Pair{
	int weight,value;
	Pair(int weight,int value){
		this.weight=weight;
		this.value=value;
	}
}
public class Main {
	private static int max(int a,int b) {return a>b?a:b;}
	public static void main(String[] args) throws IOException {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st=new StringTokenizer(br.readLine()," ");
		int n=Integer.parseInt(st.nextToken()),k=Integer.parseInt(st.nextToken());
		int dp[][]=new int[n+1][k+1];
		Pair arr[]=new Pair[n+1];
		for(int i=1;i<=n;++i) {
			st=new StringTokenizer(br.readLine()," ");
			arr[i]=new Pair(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
		}
		for(int i=1;i<=n;++i) for(int j=1;j<=k;++j) {
			dp[i][j]=dp[i-1][j];
			if(j>=arr[i].weight)
				dp[i][j]=max(dp[i][j],dp[i-1][j-arr[i].weight]+arr[i].value);
		}
		bw.write(Integer.toString(dp[n][k]));
		bw.flush(); bw.close(); br.close();
		return;
		}
}
